// Code generated by troptgen. DO NOT EDIT.

package trttlcache

import (
	trcache "github.com/rrgmc/trcache"
	"time"
)

func WithDefaultDuration[K comparable, V any](duration time.Duration) trcache.RootOption {
	const optionName = "github.com/rrgmc/trcache/cache/ttlcache/options.DefaultDuration"
	const optionHash = uint64(0xf4362521639a8ceb)
	return trcache.RootOptionFunc(func(o any) bool {
		switch opt := o.(type) {
		case options[K, V]:
			opt.OptDefaultDuration(duration)
			return true
		}
		return false
	}, optionName, optionHash)
}
func WithValidator[K comparable, V any](validator trcache.Validator[V]) trcache.RootOption {
	const optionName = "github.com/rrgmc/trcache/cache/ttlcache/options.Validator"
	const optionHash = uint64(0xb698c8bd56c6af3e)
	return trcache.RootOptionFunc(func(o any) bool {
		switch opt := o.(type) {
		case options[K, V]:
			opt.OptValidator(validator)
			return true
		}
		return false
	}, optionName, optionHash)
}
func WithGetTouch[K comparable, V any](touch bool) trcache.GetOption {
	const optionName = "github.com/rrgmc/trcache/cache/ttlcache/getOptions.Touch"
	const optionHash = uint64(0x88193653496df4fd)
	return trcache.GetOptionFunc(func(o any) bool {
		switch opt := o.(type) {
		case getOptions[K, V]:
			opt.OptTouch(touch)
			return true
		}
		return false
	}, optionName, optionHash)
}

type rootOptionsImpl[K comparable, V any] struct {
	callDefaultDeleteOptions []trcache.DeleteOption
	callDefaultGetOptions    []trcache.GetOption
	callDefaultSetOptions    []trcache.SetOption
	defaultDuration          time.Duration
	name                     string
	validator                trcache.Validator[V]
}

var _ options[string, string] = &rootOptionsImpl[string, string]{}

func (o *rootOptionsImpl[K, V]) OptCallDefaultDeleteOptions(options ...trcache.DeleteOption) {
	o.callDefaultDeleteOptions = options
}
func (o *rootOptionsImpl[K, V]) OptCallDefaultGetOptions(options ...trcache.GetOption) {
	o.callDefaultGetOptions = options
}
func (o *rootOptionsImpl[K, V]) OptCallDefaultSetOptions(options ...trcache.SetOption) {
	o.callDefaultSetOptions = options
}
func (o *rootOptionsImpl[K, V]) OptDefaultDuration(duration time.Duration) {
	o.defaultDuration = duration
}
func (o *rootOptionsImpl[K, V]) OptName(name string) {
	o.name = name
}
func (o *rootOptionsImpl[K, V]) OptValidator(validator trcache.Validator[V]) {
	o.validator = validator
}

type getOptionsImpl[K comparable, V any] struct {
	touch bool
}

var _ getOptions[string, string] = &getOptionsImpl[string, string]{}

func (o *getOptionsImpl[K, V]) OptTouch(touch bool) {
	o.touch = touch
}

type setOptionsImpl[K comparable, V any] struct {
	duration time.Duration
}

var _ setOptions[string, string] = &setOptionsImpl[string, string]{}

func (o *setOptionsImpl[K, V]) OptDuration(duration time.Duration) {
	o.duration = duration
}

type deleteOptionsImpl[K comparable, V any] struct{}

var _ deleteOptions[string, string] = &deleteOptionsImpl[string, string]{}
